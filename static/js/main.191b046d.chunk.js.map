{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","chosenEmoji","setChosenEmoji","a","document","getElementsByTagName","placeholder","f","className","onEmojiClick","event","emojiObject","emoji","text","onClick","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wQAgEeA,EA5DH,WACV,MAAsCC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KADgB,4CAWhB,sBAAAC,EAAA,sEACcC,SAASC,qBAAqB,SAD5C,cAGI,GAAGC,YAAY,wBAHnB,4CAXgB,sBAyBhB,OAzBgB,mCAiBlBC,GAUI,qCAAE,qBAAKC,UAAU,MAAf,SAEA,cAAC,IAAD,CAAQC,aA1BS,SAACC,EAAOC,GAC3BT,EAAeS,QA2BT,sBAAKH,UAAU,MAAf,UACDP,EACC,+CAAkBA,EAAYW,SAE9B,oDAMH,cAAC,kBAAD,CAAiBC,KAAMZ,EAAYA,EAAYW,MAAM,IAArD,SACL,yBAAQJ,UAAU,MAAMM,QAvBzB,WACCC,MAAM,8BAsBN,cAAsC,mBAAGP,UAAU,kBAAkB,cAAY,qBClCpEQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASwB,eAAe,SAM1BZ,M","file":"static/js/main.191b046d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Picker from 'emoji-picker-react';\nimport './App.css';\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\nconst App = () => {\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n\n    \n\n    \n  };\n  \n  async function f(){\n  var edt=await document.getElementsByTagName(\"input\");\n\n  edt[0].placeholder=\"Search for your EMOJI\"\n\n}\nf();\n\n function al(){\n  alert(\"Emoji Copied to Clipboard\");\n}\n\n\n\n  return (\n    \n    <><div className=\"box\">\n\n      <Picker onEmojiClick={onEmojiClick} />\n\n    </div><div className=\"txt\">\n        {chosenEmoji ? (\n          <span>You chose: {chosenEmoji.emoji}</span>\n        ) : (\n          <span>Emoji Search App</span>\n        )}\n       \n\n\n\n       <CopyToClipboard text={chosenEmoji?chosenEmoji.emoji:\"a\"}>\n  <button className=\"cpy\" onClick={al}> <i className=\"fa fa-clipboard\" aria-hidden=\"true\"></i></button>\n</CopyToClipboard>\n\n\n\n\n\n      </div>\n      \n      \n      \n      </>\n\n\n          \n\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}